<?xml version="1.0" encoding="utf-8"?>

<!--

ADOBE SYSTEMS INCORPORATED
Copyright 2008 Adobe Systems Incorporated
All Rights Reserved.

NOTICE: Adobe permits you to use, modify, and distribute this file
in accordance with the terms of the license agreement accompanying it.

-->

<!--- The default skin class for a Spark ToggleButton component.  

@see spark.components.ToggleButton

@langversion 3.0
@playerversion Flash 10
@playerversion AIR 1.5
@productversion Flex 4
-->
<s:SparkButtonSkin xmlns:fx="http://ns.adobe.com/mxml/2009" 
				   xmlns:s="library://ns.adobe.com/flex/spark" 
				   xmlns:fb="http://ns.adobe.com/flashbuilder/2009"
				   minWidth="21" minHeight="21" blendMode="layer">
	
	<!-- host component -->
	<fx:Metadata>
		<![CDATA[ 
		/** 
		* @copy spark.skins.spark.ApplicationSkin#hostComponent
		*/
		[HostComponent("spark.components.ToggleButton")]
		]]>
	</fx:Metadata>
	
	<fx:Script fb:purpose="styling">
		
	
			
		<![CDATA[
			import gshah.GshahScreenCapture;
			
			
			/* Define the skin elements that should not be colorized. 
			For toggle button, the graphics are colorized but the label is not. */
			static private const exclusions:Array = ["labelDisplay"];
			
			/**
			 * @private
			 */    
			override public function get colorizeExclusions():Array {return exclusions;}
			
			/**
			 * @private
			 */
			override protected function initializationComplete():void
			{
				useChromeColor = true;
				super.initializationComplete();
			}
			
			/**
			 * @private
			 */
			override protected function updateDisplayList(unscaledWidth:Number, unscaledHeight:Number) : void
			{
				
				super.updateDisplayList(unscaledWidth, unscaledHeight);
			}
			
		]]>
	</fx:Script>
	
	<!-- states -->
	<s:states>
		<s:State name="up" />
		<s:State name="over" stateGroups="overStates" />
		<s:State name="down" stateGroups="downStates" />
		<s:State name="disabled" stateGroups="disabledStates" />
		<s:State name="upAndSelected" stateGroups="selectedStates, selectedUpStates" />
		<s:State name="overAndSelected" stateGroups="overStates, selectedStates" />
		<s:State name="downAndSelected" stateGroups="downStates, selectedStates" />
		<s:State name="disabledAndSelected" stateGroups="selectedUpStates, disabledStates, selectedStates" />
	</s:states>
	<s:Ellipse left="0" right="0" top="0" bottom="0"
			   verticalCenter="0" horizontalCenter="0">
		<s:fill>
			<s:SolidColor color="#ffffff"/>
		</s:fill>
	</s:Ellipse>
	
	<s:Ellipse left="0" right="0" top="0" bottom="0"
			   verticalCenter="0" horizontalCenter="0">
		<s:fill>
			<s:LinearGradient rotation="-90">
				<s:GradientEntry color="#800c1f" color.over="#660918" color.down="#730A1B" ratio="0" alpha="1"/>
				<s:GradientEntry color="#d54545" color.over="#AA3737" color.down="#BF3E3E" ratio=".5" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Ellipse>
	
	<s:Ellipse left="0" right="0" top="0" bottom="0" 
			   alpha.downAndSelected="0.7" alpha.overAndSelected="0.6" alpha="0.5"
			   verticalCenter="0" horizontalCenter="0" includeIn="selectedStates">
		<s:fill>
			<s:LinearGradient rotation="-90">
				<s:GradientEntry color="#AA930D" ratio="0" alpha="1"/>
				<s:GradientEntry color="#FFCC33" ratio=".5" alpha="1"/>
			</s:LinearGradient>
		</s:fill>
	</s:Ellipse>
	<s:Ellipse left="0" right="0" top="0" bottom="0" alpha="0.5"
			   verticalCenter="0" horizontalCenter="0" includeIn="disabledStates">
		<s:fill>
			<s:SolidColor color="#C6FFFF"/>
		</s:fill>
	</s:Ellipse>
	<s:Ellipse  left="0" right="0" top="0" bottom="0"
				verticalCenter="0" horizontalCenter="0">
		<s:stroke>
			<s:SolidColorStroke weight="3" color="#666666"
								color.downAndSelected="#EEEEEE" color.overAndSelected="#CCCCCC" 
								color.over="#888888" color.down="#AAAAAA"/>
		</s:stroke>
	</s:Ellipse>
	<s:Label verticalCenter="0" horizontalCenter="0" color="0xffffff"
			 text="REC" text.selectedStates="STOP" fontSize="24" textAlign="center"/>
</s:SparkButtonSkin>

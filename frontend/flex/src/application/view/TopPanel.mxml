<?xml version="1.0" encoding="utf-8"?>
<s:BorderContainer xmlns:fx="http://ns.adobe.com/mxml/2009"
				   xmlns:s="library://ns.adobe.com/flex/spark"
				   xmlns:mx="library://ns.adobe.com/flex/mx" depth="2"
				   width="100%" height="48"
				   backgroundColor="#333333" 
				   borderVisible="false" 
				   xmlns:components="application.components.*">
	<fx:Declarations>
		<!-- Place non-visual elements (e.g., services, value objects) here -->
	</fx:Declarations>
	<fx:Script>
		<![CDATA[
			import flash.net.navigateToURL;
			
			import mx.core.FlexGlobals;
			import mx.events.FlexEvent;
			import mx.managers.PopUpManager;
			
			import application.assets.ApplicationAssets;
			import application.view.popups.LicensingWindow;
			
			import sys.SystemSettings;
			
			private const SUPPORT_URL:String = "http://inmotiontech.kayako.com/";
			[Bindable]
			public var lineX:Number;
			
			protected function logoUI_creationCompleteHandler(event:FlexEvent):void
			{
				logoUI.addChild(new ApplicationAssets.LOGO_ICON_30);
				//rotate3DY.play();
			}
			
			protected function clickHandler(event:MouseEvent):void
			{
				navigateToURL(new URLRequest(SUPPORT_URL));
			}
			
			
			protected function updateIndicator_mouseOverHandler(event:MouseEvent):void
			{
				if(SystemSettings.updateAvailable&&updateTooltip.visible==false)
				{
					updateTooltip.visible=true;
					FlexGlobals.topLevelApplication.addEventListener(MouseEvent.CLICK, removeUpdateTooltip);
				}
			}
			
			protected function removeUpdateTooltip(event:MouseEvent):void
			{
				FlexGlobals.topLevelApplication.removeEventListener(MouseEvent.CLICK, removeUpdateTooltip);
				updateTooltip.visible=false;
				
				
			}
			
			protected function logoutLabel_clickHandler(event:MouseEvent):void
			{
				SharedObject.getLocal('gshah').data["licenseRole"]=null;
				var licensingWindow:LicensingWindow=new LicensingWindow;
				PopUpManager.addPopUp(licensingWindow,FlexGlobals.topLevelApplication as DisplayObject,true);
				PopUpManager.centerPopUp(licensingWindow);
			}
			
		]]>
	</fx:Script>
	<fx:Declarations>
		<s:Sequence id="rotate3DY" repeatCount="0" target="{logoUI}">
			<s:Rotate3D angleYFrom="0"
						angleYTo="360"
						duration="4000"
						autoCenterTransform="true"/>
		</s:Sequence>
	</fx:Declarations>
	<s:Rect width="100%" height="100%">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry ratio="0" color="0x3d3e40"/>
				<s:GradientEntry ratio="1" color="0x39393b"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Rect width="100%" height="4" top="0">
		<s:fill>
			<s:LinearGradient rotation="90">
				<s:GradientEntry ratio="0" color="0x2b2b2c"/>
				<s:GradientEntry ratio="0.5" color="0x47484a"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<s:Rect width="3" height="{height-2}" left="{lineX}" top="2">
		<s:fill>
			<s:LinearGradient>
				<s:GradientEntry ratio="0" color="0x2b2b2c"/>
				<s:GradientEntry ratio="0.7" color="0x47484a"/>
			</s:LinearGradient>
		</s:fill>
	</s:Rect>
	<mx:UIComponent  verticalCenter="0"  left="7" width="30" height="30"
					 id="logoUI" creationComplete="logoUI_creationCompleteHandler(event)">
		<!--<mx:filters>
		<s:DropShadowFilter distance="1"/>
		</mx:filters>-->
	</mx:UIComponent>
	<s:Label verticalCenter="0" left="50" text="videomotionpro" styleName="TopLabelStyle" fontFamily="OpenSans" fontWeight="normal" fontSize="22"/>
	<s:Label id="supportLabel" verticalCenter="0" right="100" text="Support" styleName="ButtonBaseStyle TopLabelStyle" click="clickHandler(event)" 
			 buttonMode="true" mouseOver="{supportLabel.alpha = 0.8;}" mouseOut="{supportLabel.alpha = 1;}"/>
	<s:Label id="logoutLabel" verticalCenter="0" right="30" text="Logout" styleName="ButtonBaseStyle TopLabelStyle" click="logoutLabel_clickHandler(event)" 
			 buttonMode="true" mouseOver="{logoutLabel.alpha = 0.8;}" mouseOut="{logoutLabel.alpha = 1;}"/>
	
	<components:MessageAlertButton id="updateIndicator" verticalCenter="0" 
								   mouseOver="updateIndicator_mouseOverHandler(event)"
								   right="200"/>
	<s:Group  id="updateTooltip" 
			  visible="false" 
			  includeInLayout="false"
			  y="{updateIndicator.y}" 
			  x="{updateIndicator.x-updateVGroup.width-10}">
		<s:Rect  width="{updateVGroup.width}" height="{updateVGroup.height}">
			<s:fill>
				<s:SolidColor color="#000000" alpha="0.3"/>
			</s:fill>
		</s:Rect>
		<s:VGroup id="updateVGroup" horizontalAlign="center" 
				  paddingLeft="5" paddingRight="5" paddingTop="5" paddingBottom="5">
			<s:Label text="A new software update is available" fontSize="11" styleName="ButtonBaseStyle" color="0xffffff"/>
			<s:Label text="Click on the button below to update" fontSize="11" styleName="ButtonBaseStyle" color="0xffffff"/>
			<s:Button id="updateSoftwareButton" skinClass="application.skins.UpdateButtonSkin"
					  label="Update Software" color="0xffffff" click="SharedObject.getLocal('gshah').data['licenseRole']=null;FlexGlobals.topLevelApplication.updater.downloadUpdate()"/>
		</s:VGroup>
	</s:Group>
	
</s:BorderContainer>
